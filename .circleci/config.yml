version: 2
jobs:
  build:
    working_directory: /go/src/github.com/masa213f/github-release-sample
    docker:
    - image: circleci/golang:1.12
    steps:
    - checkout
    - run: go get -v -t -d ./...
    - run: go test -v ./...
    - run: make build
    - run: ./sample

  release:
    working_directory: /go/src/github.com/masa213f/github-release-sample
    docker:
    - image: circleci/golang:1.12
    steps:
    - run: echo "export RELEASE_VERSION=${CIRCLE_TAG#release-v}" >> ${BASH_ENV}
    - checkout
    - run: go get -v -t -d ./...
    - run: go test -v ./...
    - run:
        name: build
        command: |
          source ${BASH_ENV}
          make build VERSION=${RELEASE_VERSION}
    - run:
        name: check release version
        command: |
          PRERELEASE=$(./semver ${RELEASE_VERSION})
          echo "export PRERELEASE=${PRERELEASE}" >> ${BASH_ENV}
          echo "Version: ${RELEASE_VERSION}"
          echo "Prelease: ${PRERELEASE}"
    - run:
        name: run
        command: |
          ./sample
    - run:
        name: archive
        command: |
          mkdir /tmp/release
          git archive --format=tar.gz ${CIRCLE_TAG} > /tmp/release/v${RELEASE_VERSION}.tar.gz
          git archive --format=zip ${CIRCLE_TAG} > /tmp/release/v${RELEASE_VERSION}.zip
          tar czf /tmp/release/sample-linux-amd64-v${RELEASE_VERSION}.tar.gz sample
    - run: GO111MODULE=on go get github.com/tcnksm/ghr
    - run:
        name: release as draft
        command: |
          if [ -n "${PRELEASE}" ]; then
             PRE_OPT=-prerelease
          fi
          ghr -draft ${PRE_OPT} -n v${RELEASE_VERSION} ${CIRCLE_TAG} /tmp/release

workflows:
  version: 2
  main:
    jobs:
    - build:
        filters:
          branches:
            ignore:
            - release

  release:
    jobs:
    - release:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^release-v.*/
